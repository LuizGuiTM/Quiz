{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useState, useEffect } from 'react';\nimport styles from \"./styles\";\nimport Contato from \"./componentes/Contato\";\nimport { createTable, obtemTodosContatos, adicionaContato, alteraContato, excluiContato, excluiTodosContatos } from \"./services/dbservice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      id = _useState2[0],\n      setId = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nome = _useState4[0],\n      setNome = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      telefone = _useState6[0],\n      setTelefone = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      contatos = _useState8[0],\n      setContatos = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      recarregaTela = _useState10[0],\n      setRecarregaTela = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      criarTabela = _useState12[0],\n      setCriarTabela = _useState12[1];\n\n  function processamentoUseEffect() {\n    return _regeneratorRuntime.async(function processamentoUseEffect$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (criarTabela) {\n              _context.next = 5;\n              break;\n            }\n\n            console.log(\"Verificando necessidade de criar tabelas...\");\n            setCriarTabela(true);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(createTable());\n\n          case 5:\n            if (!recarregaTela) {\n              _context.next = 9;\n              break;\n            }\n\n            console.log(\"Recarregando dados...\");\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(carregaDados());\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    console.log('executando useffect');\n    processamentoUseEffect();\n  }, [recarregaTela]);\n\n  function createUniqueId() {\n    return Date.now().toString(36) + Math.random().toString(36).slice(0, 2);\n  }\n\n  function salvaDados() {\n    var novoRegistro, identificador, obj, resposta, _resposta;\n\n    return _regeneratorRuntime.async(function salvaDados$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            novoRegistro = false;\n            identificador = id;\n\n            if (identificador == undefined) {\n              identificador = createUniqueId();\n              novoRegistro = true;\n            }\n\n            obj = {\n              id: identificador,\n              nome: nome,\n              telefone: telefone\n            };\n            _context2.prev = 4;\n\n            if (!novoRegistro) {\n              _context2.next = 12;\n              break;\n            }\n\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(adicionaContato(obj));\n\n          case 8:\n            resposta = _context2.sent;\n            if (resposta) Alert.alert('adicionado com sucesso!');else Alert.alert('Falhou miseravelmente!');\n            _context2.next = 17;\n            break;\n\n          case 12:\n            console.log('vamos alterar o contato');\n            _context2.next = 15;\n            return _regeneratorRuntime.awrap(alteraContato(obj));\n\n          case 15:\n            _resposta = _context2.sent;\n            if (_resposta) Alert.alert('Alterado com sucesso!');else Alert.alert('Falhou miseravelmente!');\n\n          case 17:\n            console.log('aqui é para executar só depois de ter alterado / inserido o contato');\n            Keyboard.dismiss();\n            limparCampos();\n            setRecarregaTela(true);\n            _context2.next = 26;\n            break;\n\n          case 23:\n            _context2.prev = 23;\n            _context2.t0 = _context2[\"catch\"](4);\n            Alert.alert(_context2.t0);\n\n          case 26:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[4, 23]], Promise);\n  }\n\n  function carregaDados() {\n    try {\n      obtemTodosContatos().then(function (resposta) {\n        var contatos = resposta;\n        setContatos(contatos);\n        setRecarregaTela(false);\n      });\n    } catch (e) {\n      Alert.alert(e.toString());\n    }\n  }\n\n  function editar(identificador) {\n    var contato = contatos.find(function (contato) {\n      return contato.id == identificador;\n    });\n\n    if (contato != undefined) {\n      setId(contato.id);\n      setNome(contato.nome);\n      setTelefone(contato.telefone);\n    }\n\n    console.log(contato);\n  }\n\n  function limparCampos() {\n    return _regeneratorRuntime.async(function limparCampos$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setNome(\"\");\n            setTelefone(\"\");\n            setId(undefined);\n            Keyboard.dismiss();\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function efetivaExclusao() {\n    return _regeneratorRuntime.async(function efetivaExclusao$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(excluiTodosContatos());\n\n          case 3:\n            setRecarregaTela(true);\n            _context4.next = 9;\n            break;\n\n          case 6:\n            _context4.prev = 6;\n            _context4.t0 = _context4[\"catch\"](0);\n            Alert.alert(_context4.t0);\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  }\n\n  function apagarTudo() {\n    if (Alert.alert('Muita atenção!!!', 'Confirma a exclusão de todos os contatos?', [{\n      text: 'Sim, confirmo!',\n      onPress: function onPress() {\n        efetivaExclusao();\n      }\n    }, {\n      text: 'Não!!!',\n      style: 'cancel'\n    }])) ;\n  }\n\n  function removerElemento(identificador) {\n    Alert.alert('Atenção', 'Confirma a remoção do contato?', [{\n      text: 'Sim',\n      onPress: function onPress() {\n        return efetivaRemoverContato(identificador);\n      }\n    }, {\n      text: 'Não',\n      style: 'cancel'\n    }]);\n  }\n\n  function efetivaRemoverContato(identificador) {\n    return _regeneratorRuntime.async(function efetivaRemoverContato$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return _regeneratorRuntime.awrap(excluiContato(identificador));\n\n          case 3:\n            Keyboard.dismiss();\n            limparCampos();\n            setRecarregaTela(true);\n            Alert.alert('Contato apagado com sucesso!!!');\n            _context5.next = 12;\n            break;\n\n          case 9:\n            _context5.prev = 9;\n            _context5.t0 = _context5[\"catch\"](0);\n            Alert.alert(_context5.t0);\n\n          case 12:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.tituloAgenda,\n      children: \"Agenda de Contatos - v1.0\"\n    }), _jsx(Text, {}), _jsx(Text, {}), _jsxs(View, {\n      style: styles.areaDados,\n      children: [_jsxs(View, {\n        style: styles.areaNome,\n        children: [_jsx(Text, {\n          children: \"Nome\"\n        }), _jsx(TextInput, {\n          style: styles.caixaTexto,\n          onChangeText: function onChangeText(texto) {\n            return setNome(texto);\n          },\n          value: nome\n        })]\n      }), _jsxs(View, {\n        style: styles.areaTelefone,\n        children: [_jsx(Text, {\n          children: \"Telefone\"\n        }), _jsx(TextInput, {\n          style: styles.caixaTexto,\n          onChangeText: function onChangeText(texto) {\n            return setTelefone(texto);\n          },\n          value: telefone,\n          keyboardType: \"phone-pad\"\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.areaBotoes,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.botao,\n        onPress: function onPress() {\n          return salvaDados();\n        },\n        children: _jsx(Text, {\n          style: styles.textoBotao,\n          children: \"Salvar\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.botao,\n        onPress: function onPress() {\n          return limparCampos();\n        },\n        children: _jsx(Text, {\n          style: styles.textoBotao,\n          children: \"Cancelar\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.botao, styles.botaoApagarTudo],\n        onPress: function onPress() {\n          return apagarTudo();\n        },\n        children: _jsx(Text, {\n          style: styles.textoBotao,\n          children: \"Apagar tudo\"\n        })\n      })]\n    }), _jsx(ScrollView, {\n      style: styles.listaContatos,\n      children: contatos.map(function (contato, index) {\n        return _jsx(Contato, {\n          contato: contato\n        }, index.toString());\n      })\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}","map":{"version":3,"sources":["C:/AulaFTT/_NODE/contatosSQLite-Componente/App.js"],"names":["StatusBar","useState","useEffect","styles","Contato","createTable","obtemTodosContatos","adicionaContato","alteraContato","excluiContato","excluiTodosContatos","App","id","setId","nome","setNome","telefone","setTelefone","contatos","setContatos","recarregaTela","setRecarregaTela","criarTabela","setCriarTabela","processamentoUseEffect","console","log","carregaDados","createUniqueId","Date","now","toString","Math","random","slice","salvaDados","novoRegistro","identificador","undefined","obj","resposta","Alert","alert","Keyboard","dismiss","limparCampos","then","e","editar","contato","find","efetivaExclusao","apagarTudo","text","onPress","style","removerElemento","efetivaRemoverContato","container","tituloAgenda","areaDados","areaNome","caixaTexto","texto","areaTelefone","areaBotoes","botao","textoBotao","botaoApagarTudo","listaContatos","map","index"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport {\n  Alert, Text, TextInput, TouchableOpacity,\n  View, Keyboard, ScrollView, Image\n} from 'react-native';\nimport { useState, useEffect } from 'react';\nimport styles from './styles';\nimport Contato from './componentes/Contato';\n\nimport {\n  createTable,\n  obtemTodosContatos,\n  adicionaContato,\n  alteraContato,\n  excluiContato,\n  excluiTodosContatos,\n} from './services/dbservice';\n\nexport default function App() {\n\n  const [id, setId] = useState();\n  const [nome, setNome] = useState();\n  const [telefone, setTelefone] = useState();\n  const [contatos, setContatos] = useState([]);\n  const [recarregaTela, setRecarregaTela] = useState(true);\n  const [criarTabela, setCriarTabela] = useState(false);\n\n  async function processamentoUseEffect() {\n    if (!criarTabela) {\n      console.log(\"Verificando necessidade de criar tabelas...\");\n      setCriarTabela(true);\n      await createTable();      \n    }\n    if (recarregaTela)\n    {\n      console.log(\"Recarregando dados...\");\n      await carregaDados();\n    }\n  }\n\n\n\n  useEffect(\n    () => {\n      console.log('executando useffect');\n      processamentoUseEffect(); //necessário método pois aqui não pode utilizar await...\n    }, [recarregaTela]);\n\n\n  function createUniqueId() {\n    return Date.now().toString(36) + Math.random().toString(36).slice(0, 2);\n  }\n\n\n  async function salvaDados() {\n    let novoRegistro = false;\n    let identificador = id;\n\n    if (identificador == undefined) {\n      identificador = createUniqueId();\n      novoRegistro = true;\n    }\n\n    let obj = {\n      id: identificador,\n      nome: nome,\n      telefone: telefone,\n    };\n\n    try {\n\n      if (novoRegistro) {\n        let resposta = (await adicionaContato(obj));\n\n        if (resposta)\n          Alert.alert('adicionado com sucesso!');\n        else\n          Alert.alert('Falhou miseravelmente!');\n      }\n      else {\n        console.log('vamos alterar o contato');\n        let resposta = await alteraContato(obj);\n        if (resposta)\n          Alert.alert('Alterado com sucesso!');\n        else\n          Alert.alert('Falhou miseravelmente!');\n      }\n\n      console.log('aqui é para executar só depois de ter alterado / inserido o contato');\n      Keyboard.dismiss();\n      limparCampos();\n      setRecarregaTela(true);\n    } catch (e) {\n      Alert.alert(e);\n    }\n  }\n\n  function carregaDados() {\n    try {\n      obtemTodosContatos().then((resposta) => {\n\n        let contatos = resposta;\n        setContatos(contatos);\n        setRecarregaTela(false);\n      })\n\n    } catch (e) {\n      Alert.alert(e.toString());\n    }\n  }\n\n\n  function editar(identificador) {\n    const contato = contatos.find(contato => contato.id == identificador);\n\n    if (contato != undefined) {\n      setId(contato.id);\n      setNome(contato.nome);\n      setTelefone(contato.telefone);\n    }\n\n    console.log(contato);\n  }\n\n\n  async function limparCampos() {\n    setNome(\"\");\n    setTelefone(\"\");\n    setId(undefined);\n    Keyboard.dismiss();\n  }\n\n\n  async function efetivaExclusao() {\n    try {\n      await excluiTodosContatos();\n      setRecarregaTela(true);\n    }\n    catch (e) {\n      Alert.alert(e);\n    }\n  }\n\n  function apagarTudo() {\n    if (Alert.alert('Muita atenção!!!', 'Confirma a exclusão de todos os contatos?',\n      [\n        {\n          text: 'Sim, confirmo!',\n          onPress: () => {\n            efetivaExclusao();\n          }\n        },\n        {\n          text: 'Não!!!',\n          style: 'cancel'\n        }\n      ]));\n  }\n\n\n  function removerElemento(identificador) {\n    Alert.alert('Atenção', 'Confirma a remoção do contato?',\n      [\n        {\n          text: 'Sim',\n          onPress: () => efetivaRemoverContato(identificador),\n        },\n        {\n          text: 'Não',\n          style: 'cancel',\n        }\n      ]);\n  }\n\n  async function efetivaRemoverContato(identificador) {\n    try {\n      await excluiContato(identificador);\n      Keyboard.dismiss();\n      limparCampos();\n      setRecarregaTela(true);\n      Alert.alert('Contato apagado com sucesso!!!');\n    } catch (e) {\n      Alert.alert(e);\n    }\n  }\n\n\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.tituloAgenda}>Agenda de Contatos - v1.0</Text>\n      <Text /><Text />\n\n\n      <View style={styles.areaDados}>\n\n        <View style={styles.areaNome}>\n          <Text>Nome</Text>\n          <TextInput style={styles.caixaTexto}\n            onChangeText={(texto) => setNome(texto)}\n            value={nome} />\n        </View>\n\n        <View style={styles.areaTelefone}>\n          <Text>Telefone</Text>\n          <TextInput style={styles.caixaTexto}\n            onChangeText={(texto) => setTelefone(texto)}\n            value={telefone}\n            keyboardType='phone-pad' />\n        </View>\n\n      </View>\n\n\n      <View style={styles.areaBotoes}>\n        <TouchableOpacity style={styles.botao} onPress={() => salvaDados()}>\n          <Text style={styles.textoBotao}>Salvar</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity style={styles.botao} onPress={() => limparCampos()}>\n          <Text style={styles.textoBotao}>Cancelar</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity style={[styles.botao, styles.botaoApagarTudo]} onPress={() => apagarTudo()}>\n          <Text style={styles.textoBotao}>Apagar tudo</Text>\n        </TouchableOpacity>\n      </View>\n\n\n\n      <ScrollView style={styles.listaContatos}>\n        {\n          contatos.map((contato, index) => (\n            <Contato key={index.toString()} contato={contato} />\n          ))\n        }\n\n      </ScrollView>\n\n\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}