{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useState, useEffect } from 'react';\nimport styles from \"./styles\";\nimport Contato from \"./componentes/Contato\";\nimport { createTable, obtemTodosContatos, adicionaContato, alteraContato, excluiContato, excluiTodosContatos } from \"./services/dbservice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      id = _useState2[0],\n      setId = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nome = _useState4[0],\n      setNome = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      telefone = _useState6[0],\n      setTelefone = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      contatos = _useState8[0],\n      setContatos = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      criarTabela = _useState10[0],\n      setCriarTabela = _useState10[1];\n\n  function processamentoUseEffect() {\n    return _regeneratorRuntime.async(function processamentoUseEffect$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (criarTabela) {\n              _context.next = 5;\n              break;\n            }\n\n            console.log(\"Verificando necessidade de criar tabelas...\");\n            setCriarTabela(true);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(createTable());\n\n          case 5:\n            if (!recarregaTela) {\n              _context.next = 9;\n              break;\n            }\n\n            console.log(\"Recarregando dados...\");\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(carregaDados());\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    console.log('executando useffect');\n    processamentoUseEffect();\n  }, []);\n\n  function createUniqueId() {\n    return Date.now().toString(36) + Math.random().toString(36).slice(0, 2);\n  }\n\n  function salvaDados() {\n    var novoRegistro, identificador, obj, resposta, _resposta;\n\n    return _regeneratorRuntime.async(function salvaDados$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            novoRegistro = false;\n            identificador = id;\n\n            if (identificador == undefined) {\n              identificador = createUniqueId();\n              novoRegistro = true;\n            }\n\n            obj = {\n              id: identificador,\n              nome: nome,\n              telefone: telefone\n            };\n            _context2.prev = 4;\n\n            if (!novoRegistro) {\n              _context2.next = 12;\n              break;\n            }\n\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(adicionaContato(obj));\n\n          case 8:\n            resposta = _context2.sent;\n            if (resposta) Alert.alert('adicionado com sucesso!');else Alert.alert('Falhou miseravelmente!');\n            _context2.next = 17;\n            break;\n\n          case 12:\n            console.log('vamos alterar o contato');\n            _context2.next = 15;\n            return _regeneratorRuntime.awrap(alteraContato(obj));\n\n          case 15:\n            _resposta = _context2.sent;\n            if (_resposta) Alert.alert('Alterado com sucesso!');else Alert.alert('Falhou miseravelmente!');\n\n          case 17:\n            console.log('aqui é para executar só depois de ter alterado / inserido o contato');\n            Keyboard.dismiss();\n            limparCampos();\n            _context2.next = 22;\n            return _regeneratorRuntime.awrap(carregaDados());\n\n          case 22:\n            _context2.next = 27;\n            break;\n\n          case 24:\n            _context2.prev = 24;\n            _context2.t0 = _context2[\"catch\"](4);\n            Alert.alert(_context2.t0);\n\n          case 27:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[4, 24]], Promise);\n  }\n\n  function carregaDados() {\n    try {\n      obtemTodosContatos().then(function (resposta) {\n        var contatos = resposta;\n        setContatos(contatos);\n      });\n    } catch (e) {\n      Alert.alert(e.toString());\n    }\n  }\n\n  function editar(identificador) {\n    var contato = contatos.find(function (contato) {\n      return contato.id == identificador;\n    });\n\n    if (contato != undefined) {\n      setId(contato.id);\n      setNome(contato.nome);\n      setTelefone(contato.telefone);\n    }\n\n    console.log(contato);\n  }\n\n  function limparCampos() {\n    return _regeneratorRuntime.async(function limparCampos$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setNome(\"\");\n            setTelefone(\"\");\n            setId(undefined);\n            Keyboard.dismiss();\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function efetivaExclusao() {\n    return _regeneratorRuntime.async(function efetivaExclusao$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(excluiTodosContatos());\n\n          case 3:\n            setRecarregaTela(true);\n            _context4.next = 9;\n            break;\n\n          case 6:\n            _context4.prev = 6;\n            _context4.t0 = _context4[\"catch\"](0);\n            Alert.alert(_context4.t0);\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  }\n\n  function apagarTudo() {\n    if (Alert.alert('Muita atenção!!!', 'Confirma a exclusão de todos os contatos?', [{\n      text: 'Sim, confirmo!',\n      onPress: function onPress() {\n        efetivaExclusao();\n      }\n    }, {\n      text: 'Não!!!',\n      style: 'cancel'\n    }])) ;\n  }\n\n  function removerElemento(identificador) {\n    Alert.alert('Atenção', 'Confirma a remoção do contato?', [{\n      text: 'Sim',\n      onPress: function onPress() {\n        return efetivaRemoverContato(identificador);\n      }\n    }, {\n      text: 'Não',\n      style: 'cancel'\n    }]);\n  }\n\n  function efetivaRemoverContato(identificador) {\n    return _regeneratorRuntime.async(function efetivaRemoverContato$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return _regeneratorRuntime.awrap(excluiContato(identificador));\n\n          case 3:\n            Keyboard.dismiss();\n            limparCampos();\n            setRecarregaTela(true);\n            Alert.alert('Contato apagado com sucesso!!!');\n            _context5.next = 12;\n            break;\n\n          case 9:\n            _context5.prev = 9;\n            _context5.t0 = _context5[\"catch\"](0);\n            Alert.alert(_context5.t0);\n\n          case 12:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.tituloAgenda,\n      children: \"Agenda de Contatos - v1.0\"\n    }), _jsx(Text, {}), _jsx(Text, {}), _jsxs(View, {\n      style: styles.areaDados,\n      children: [_jsxs(View, {\n        style: styles.areaNome,\n        children: [_jsx(Text, {\n          children: \"Nome\"\n        }), _jsx(TextInput, {\n          style: styles.caixaTexto,\n          onChangeText: function onChangeText(texto) {\n            return setNome(texto);\n          },\n          value: nome\n        })]\n      }), _jsxs(View, {\n        style: styles.areaTelefone,\n        children: [_jsx(Text, {\n          children: \"Telefone\"\n        }), _jsx(TextInput, {\n          style: styles.caixaTexto,\n          onChangeText: function onChangeText(texto) {\n            return setTelefone(texto);\n          },\n          value: telefone,\n          keyboardType: \"phone-pad\"\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.areaBotoes,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.botao,\n        onPress: function onPress() {\n          return salvaDados();\n        },\n        children: _jsx(Text, {\n          style: styles.textoBotao,\n          children: \"Salvar\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.botao,\n        onPress: function onPress() {\n          return limparCampos();\n        },\n        children: _jsx(Text, {\n          style: styles.textoBotao,\n          children: \"Cancelar\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.botao, styles.botaoApagarTudo],\n        onPress: function onPress() {\n          return apagarTudo();\n        },\n        children: _jsx(Text, {\n          style: styles.textoBotao,\n          children: \"Apagar tudo\"\n        })\n      })]\n    }), _jsx(ScrollView, {\n      style: styles.listaContatos,\n      children: contatos.map(function (contato, index) {\n        return _jsx(Contato, {\n          contato: contato,\n          removerElemento: removerElemento,\n          editar: editar\n        }, index.toString());\n      })\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}","map":{"version":3,"names":["StatusBar","useState","useEffect","styles","Contato","createTable","obtemTodosContatos","adicionaContato","alteraContato","excluiContato","excluiTodosContatos","App","id","setId","nome","setNome","telefone","setTelefone","contatos","setContatos","criarTabela","setCriarTabela","processamentoUseEffect","console","log","recarregaTela","carregaDados","createUniqueId","Date","now","toString","Math","random","slice","salvaDados","novoRegistro","identificador","undefined","obj","resposta","Alert","alert","Keyboard","dismiss","limparCampos","then","e","editar","contato","find","efetivaExclusao","setRecarregaTela","apagarTudo","text","onPress","style","removerElemento","efetivaRemoverContato","container","tituloAgenda","areaDados","areaNome","caixaTexto","texto","areaTelefone","areaBotoes","botao","textoBotao","botaoApagarTudo","listaContatos","map","index"],"sources":["C:/eduardo/mobile/contatosSQLite-Componente/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport {\n  Alert, Text, TextInput, TouchableOpacity,\n  View, Keyboard, ScrollView, Image\n} from 'react-native';\nimport { useState, useEffect } from 'react';\nimport styles from './styles';\nimport Contato from './componentes/Contato';\n\nimport {\n  createTable,\n  obtemTodosContatos,\n  adicionaContato,\n  alteraContato,\n  excluiContato,\n  excluiTodosContatos,\n} from './services/dbservice';\n\nexport default function App() {\n\n  const [id, setId] = useState();\n  const [nome, setNome] = useState();\n  const [telefone, setTelefone] = useState();\n  const [contatos, setContatos] = useState([]);  \n  const [criarTabela, setCriarTabela] = useState(false);\n\n  async function processamentoUseEffect() {\n    if (!criarTabela) {\n      console.log(\"Verificando necessidade de criar tabelas...\");\n      setCriarTabela(true);\n      await createTable();      \n    }\n    if (recarregaTela)\n    {\n      console.log(\"Recarregando dados...\");\n      await carregaDados();\n    }\n  }\n\n\n\n  useEffect(\n    () => {\n      console.log('executando useffect');\n      processamentoUseEffect(); //necessário método pois aqui não pode utilizar await...\n    }, []);\n\n\n  function createUniqueId() {\n    return Date.now().toString(36) + Math.random().toString(36).slice(0, 2);\n  }\n\n\n  async function salvaDados() {\n    let novoRegistro = false;\n    let identificador = id;\n\n    if (identificador == undefined) {\n      identificador = createUniqueId();\n      novoRegistro = true;\n    }\n\n    let obj = {\n      id: identificador,\n      nome: nome,\n      telefone: telefone,\n    };\n\n    try {\n\n      if (novoRegistro) {\n        let resposta = (await adicionaContato(obj));\n\n        if (resposta)\n          Alert.alert('adicionado com sucesso!');\n        else\n          Alert.alert('Falhou miseravelmente!');\n      }\n      else {\n        console.log('vamos alterar o contato');\n        let resposta = await alteraContato(obj);\n        if (resposta)\n          Alert.alert('Alterado com sucesso!');\n        else\n          Alert.alert('Falhou miseravelmente!');\n      }\n\n      console.log('aqui é para executar só depois de ter alterado / inserido o contato');\n      Keyboard.dismiss();\n      limparCampos();\n      await carregaDados();\n    } catch (e) {\n      Alert.alert(e);\n    }\n  }\n\n  function carregaDados() {\n    try {\n      obtemTodosContatos().then((resposta) => {\n\n        let contatos = resposta;\n        setContatos(contatos);        \n      })\n\n    } catch (e) {\n      Alert.alert(e.toString());\n    }\n  }\n\n\n  function editar(identificador) {\n    const contato = contatos.find(contato => contato.id == identificador);\n\n    if (contato != undefined) {\n      setId(contato.id);\n      setNome(contato.nome);\n      setTelefone(contato.telefone);\n    }\n\n    console.log(contato);\n  }\n\n\n  async function limparCampos() {\n    setNome(\"\");\n    setTelefone(\"\");\n    setId(undefined);\n    Keyboard.dismiss();\n  }\n\n\n  async function efetivaExclusao() {\n    try {\n      await excluiTodosContatos();\n      setRecarregaTela(true);\n    }\n    catch (e) {\n      Alert.alert(e);\n    }\n  }\n\n  function apagarTudo() {\n    if (Alert.alert('Muita atenção!!!', 'Confirma a exclusão de todos os contatos?',\n      [\n        {\n          text: 'Sim, confirmo!',\n          onPress: () => {\n            efetivaExclusao();\n          }\n        },\n        {\n          text: 'Não!!!',\n          style: 'cancel'\n        }\n      ]));\n  }\n\n\n  function removerElemento(identificador) {\n    Alert.alert('Atenção', 'Confirma a remoção do contato?',\n      [\n        {\n          text: 'Sim',\n          onPress: () => efetivaRemoverContato(identificador),\n        },\n        {\n          text: 'Não',\n          style: 'cancel',\n        }\n      ]);\n  }\n\n  async function efetivaRemoverContato(identificador) {\n    try {\n      await excluiContato(identificador);\n      Keyboard.dismiss();\n      limparCampos();\n      setRecarregaTela(true);\n      Alert.alert('Contato apagado com sucesso!!!');\n    } catch (e) {\n      Alert.alert(e);\n    }\n  }\n\n\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.tituloAgenda}>Agenda de Contatos - v1.0</Text>\n      <Text /><Text />\n\n\n      <View style={styles.areaDados}>\n\n        <View style={styles.areaNome}>\n          <Text>Nome</Text>\n          <TextInput style={styles.caixaTexto}\n            onChangeText={(texto) => setNome(texto)}\n            value={nome} />\n        </View>\n\n        <View style={styles.areaTelefone}>\n          <Text>Telefone</Text>\n          <TextInput style={styles.caixaTexto}\n            onChangeText={(texto) => setTelefone(texto)}\n            value={telefone}\n            keyboardType='phone-pad' />\n        </View>\n\n      </View>\n\n\n      <View style={styles.areaBotoes}>\n        <TouchableOpacity style={styles.botao} onPress={() => salvaDados()}>\n          <Text style={styles.textoBotao}>Salvar</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity style={styles.botao} onPress={() => limparCampos()}>\n          <Text style={styles.textoBotao}>Cancelar</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity style={[styles.botao, styles.botaoApagarTudo]} onPress={() => apagarTudo()}>\n          <Text style={styles.textoBotao}>Apagar tudo</Text>\n        </TouchableOpacity>\n      </View>\n\n\n\n      <ScrollView style={styles.listaContatos}>\n        {\n          contatos.map((contato, index) => (\n            <Contato  contato={contato} key={index.toString()} \n                      removerElemento={removerElemento} editar={editar} />\n          ))\n        }\n\n      </ScrollView>\n\n\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}